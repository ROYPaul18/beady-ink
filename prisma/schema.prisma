generator client {
  provider        = "prisma-client-js"
  disableQueryRaw = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  nom          String       @default("Nom temporaire")  
  prenom       String       @default("Prénom temporaire") 
  telephone    String       @unique @default("0000000000")  
  password     String
  role         Role         @default(USER)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  reservations Reservation[]
}

model Service {
  id            Int           @id @default(autoincrement())
  type          ServiceType   @unique 
  prestations   Prestation[]
  reservations  Reservation[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Prestation {
  id          Int      @id @default(autoincrement())
  name        String
  duration    Int
  description String
  price       Float
  serviceId   Int
  service     Service   @relation(fields: [serviceId], references: [id])
  images      Image[]   // Relation avec le modèle Image (1 prestation peut avoir plusieurs images)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Image {
  id           Int        @id @default(autoincrement())
  url          String     // URL de l'image sur Cloudinary
  prestationId Int        // Clé étrangère vers la prestation
  prestation   Prestation @relation(fields: [prestationId], references: [id], onDelete: Cascade) 
  createdAt    DateTime   @default(now())
}

model Reservation {
  id                            Int      @id @default(autoincrement())
  user                          User     @relation(fields: [userId], references: [id])
  userId                        Int
  service                       Service  @relation(fields: [serviceId], references: [id])
  serviceId                     Int
  date                          DateTime

  // Champs pour les réponses du formulaire Oui/Non
  answeredLatexAllergy          Boolean?
  answeredAsthmaAllergy         Boolean?
  answeredSpasmophilia          Boolean?
  answeredBloodDisease          Boolean?
  answeredRecentTreatment       Boolean?
  answeredRoaccutaneTreatment   Boolean?
  answeredEpilepsy              Boolean?
  answeredCardiovascularIssue   Boolean?
  answeredGrowthHormone         Boolean?
  answeredOrganTransplant       Boolean?
  answeredFamilyDiseaseHistory  Boolean?
  answeredCancerDiagnosis       Boolean?
  answeredBloodTransfusion      Boolean?
  answeredHIVHepatitis          Boolean?
  answeredRecentMedications     Boolean?

  createdAt                     DateTime @default(now())
  updatedAt                     DateTime @updatedAt
}

enum Role {
  USER
  CLIENT
  ADMIN
}

enum ServiceType {
  ONGLERIE
  TATOUAGE
  FLASH_TATTOO
}
